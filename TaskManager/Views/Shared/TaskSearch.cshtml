@model IEnumerable<TaskManager.Models.TaskList>


<div id="searchresults">
    <div id="res" class="center-div">
        <table name="TaskTable" class="TaskTable">
            <tr>
                <th class="thB"></th>
                <th class="thBorder">
                    I want to ..
                </th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.CheckBoxFor(modelItem => item.Mark, new { id = item.Id })
                    </td>
                    <td class="tdBorder">
                        @{string style = (item.Mark) ? "text-decoration: line-through;" : null; }
                        <div id="@item.Id" style="@style">@Html.DisplayFor(modelItem => item.Name, new { id = item.Id })</div>
                        <input id="@item.Id" name="TaskName" type="hidden" value="@item.Name" />
                    </td>

                </tr>
            }

            <tr class="trNewTask">
                <td></td>
                <td class="tdBorder">
                    <input type="text" id="NewTask" placeholder="NewTask" name="NewTask" style="border:none">
                </td>
            </tr>

            <tfoot>
                <tr>
                    <td></td>
                    <td id="RowsCount" class="tdBorder">
                        @Model.Count().ToString() @((@Model.Count() > 1) ? (" tasks") : (" task"))
                    </td>

                </tr>
            </tfoot>
        </table>
    </div>
</div>

<script>

    $("input[type='checkbox']").dblclick(function (event) {
        event.preventDefault();
    });


    $(window).on('load', function () {
        $('input:checkbox:checked').each(function () {

            var $this = $(this);
            var Taskdiv = $("div[id='" + $this.attr("id") + "']");
            var TaskName = $("input[id='" + $this.attr("id") + "'][name='TaskName']");

            if ($this.is(":checked")) {
                Taskdiv.css('text-decoration', 'line-through');
                Taskdiv.html('Comlete  ' + TaskName.val());
                var Mark = 1;
            } else {
                Taskdiv.css('text-decoration', '');
                Taskdiv.html(TaskName.val());
                var Mark = 0;
            }
        });
    });

    $('input:checkbox').click(function () {
        var $this = $(this);
        var Taskdiv = $("div[id='" + $this.attr("id") + "']");
        var TaskName = $("input[id='" + $this.attr("id") + "'][name='TaskName']");


        if ($this.is(":checked")) {
            Taskdiv.css('text-decoration', 'line-through');
            Taskdiv.html('Comlete  ' + TaskName.val());
            var Mark = 1;
        } else {
            Taskdiv.css('text-decoration', '');
            Taskdiv.html(TaskName.val());
            var Mark = 0;
        }

        $.ajax({
            url: '/Home/CheckTaskByGUID',
            type: 'POST',
            async: false,
            data: "Id=" + $this.attr("id") + "&Mark=" + Mark,
            cache: false,
            timeout: 30000
        });
    });


    $('#NewTask').keyup(function (e) {
        if (e.keyCode == 13) {
            var NewTask = $(this).val();
            var NewGUID = generateGuid();
            $(".trNewTask").before("<tr><td><input name=\"item.Mark\" id=\"" + NewGUID + "\" type=\"checkbox\" value=\"true\"><input name=\"item.Mark\" type=\"hidden\" value=\"false\"></td><td class=\"tdBorder\"><div id=\"" + NewGUID + "\">" + NewTask + "</div><input name=\"TaskName\" id=\"" + NewGUID + "\" type=\"hidden\" value=\"" + NewTask + "\"></td></tr>");
            $("input[id='" + NewGUID + "']").on('click', function () {
                var $this = $(this);
                var Taskdiv = $("div[id='" + $this.attr("id") + "']");
                var TaskName = $("input[id='" + $this.attr("id") + "'][name='TaskName']");

                if ($this.is(":checked")) {
                    $("div[id='" + $this.attr("id") + "']").css('text-decoration', 'line-through');
                    Taskdiv.html('Comlete  ' + TaskName.val());
                    var Mark = 1;
                } else {
                    $("div[id='" + $this.attr("id") + "']").css('text-decoration', '');
                    Taskdiv.html(TaskName.val());
                    var Mark = 0;
                }

                $.ajax({
                    url: '/Home/CheckTaskByGUID',
                    type: 'POST',
                    async: false,
                    data: "Id=" + $this.attr("id") + "&Mark=" + Mark,
                    cache: false,
                    timeout: 30000
                });
            });



            $('#NewTask').val("");
            var RowsCount = $('.TaskTable tr').length-3;
            if (RowsCount>1)
                $('#RowsCount').html(RowsCount + " tasks");
            if (RowsCount != 1)
                $('#RowsCount').html(RowsCount + " task");

             $.ajax({
                 url: '/Home/SaveNewTaskByGUID',
                type: 'POST',
                async: false,
                 data: "name=" + NewTask + "&Mark=" + 0 + "&NewGUID=" + NewGUID,  
                cache: false,
                timeout: 30000,
                error: function () {
                    return true;
                }
            });
        }
    });

    function generateGuid() {
        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
        });
    }


</script>